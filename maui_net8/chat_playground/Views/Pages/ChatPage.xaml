<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:mct="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:local="clr-namespace:ChatPlayground"
             xmlns:views="clr-namespace:ChatPlayground.Views"
             xmlns:models="clr-namespace:ChatPlayground.Models"
             xmlns:services="clr-namespace:ChatPlayground.Services"
             xmlns:vm="clr-namespace:ChatPlayground.ViewModels"
             xmlns:icons="clr-namespace:UraniumUI.Icons.MaterialIcons;assembly=UraniumUI.Icons.MaterialIcons"
             xmlns:uranium="http://schemas.enisn-projects.io/dotnet/maui/uraniumui"
             x:Class="ChatPlayground.Views.ChatPage"
             x:DataType="vm:ChatPageViewModel"
             x:Name="chatPage">
    
    <ContentPage.Resources>
        <Style x:Key="ModelDropdownButtonStyle" TargetType="uranium:StatefulContentView">
            <Setter Property="VisualStateManager.VisualStateGroups">
                <VisualStateGroupList>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal">
                            <VisualState.Setters>
                                <Setter Property="BackgroundColor" Value="{StaticResource LmKitPurple}"/>
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                            <VisualState.Setters>
                                <Setter Property="BackgroundColor" Value="{StaticResource LmKitPurpleAccent}"/>
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState x:Name="PointerOver">
                            <VisualState.Setters>
                                <Setter Property="BackgroundColor" Value="{StaticResource LmKitPurpleAccent}"/>
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateGroupList>
            </Setter>
        </Style>


        <Style x:Key="SidebarToggleButtonStyle" TargetType="Button">
            <Setter Property="Margin" Value="12"/>
            <Setter Property="FontFamily" Value="MaterialRegular"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Padding" Value="8"/>
            <Setter Property="BorderWidth" Value="0"/>
            <Setter Property="BackgroundColor" Value="{StaticResource LmKitPurple}"/>
            <Setter Property="TextColor" Value="{StaticResource OnSurfaceDark}" />
        </Style>
    </ContentPage.Resources>

    <Grid x:Name="rootGrid">
        <Grid
            RowSpacing="8"
            Margin="0, 8"
            ZIndex="1"
            HorizontalOptions="Start"
            WidthRequest="{Binding Source={x:Reference modelDropdownBorder}, Path=Width}"
            TranslationX="{Binding Source={x:Reference modelDropdownBorder}, Path=X}"
            Grid.Row="0"
            VerticalOptions="Start">

            <Grid.Triggers>
                <DataTrigger TargetType="Grid" Binding="{Binding Source={x:Reference chatPage}, Path=ModelDropdownIsExpanded}" Value="True">
                    <Setter Property="Opacity" Value="1"/>
                    <Setter Property="InputTransparent" Value="False"/>
                </DataTrigger>

                <DataTrigger TargetType="Grid" Binding="{Binding Source={x:Reference chatPage}, Path=ModelDropdownIsExpanded}" Value="False">
                    <Setter Property="Opacity" Value="0"/>
                    <Setter Property="InputTransparent" Value="True"/>
                </DataTrigger>
            </Grid.Triggers>

            <Grid.TranslationY>
                <MultiBinding Converter="{mct:MultiMathExpressionConverter}" ConverterParameter="x0+x1">
                    <Binding  Source="{x:Reference modelDropdownBorder}" Path="Y" />
                    <Binding  Source="{x:Reference modelDropdownBorder}" Path="Height" />
                </MultiBinding>
            </Grid.TranslationY>

            <Border
                BackgroundColor="{StaticResource SurfaceContainerDark}"
                StrokeThickness="0"
                StrokeShape="RoundRectangle 8">

                <CollectionView 
                    MaximumHeightRequest="{Binding Source={x:Reference chatPage}, Path=Height, Converter={mct:MathExpressionConverter}, ConverterParameter='x/2'}"
                    x:Name="modelsCollection"
                    Unfocused="ModelsCollectionViewUnfocused"
                    SelectionMode="Single" 
                    Margin="0"
                    SelectedItem="{Binding SelectedModel}"
                    ItemsSource="{Binding ModelListViewModel.UserModels}">

                    <CollectionView.ItemTemplate>
                        <DataTemplate x:DataType="vm:ModelInfoViewModel">
                            <Grid Padding="16">
                                <Label Text="{Binding Name}"/>
                            </Grid>
                        </DataTemplate>
                    </CollectionView.ItemTemplate>

                    <CollectionView.ItemsLayout>
                        <LinearItemsLayout ItemSpacing="0" Orientation="Vertical" />
                    </CollectionView.ItemsLayout>

                    <CollectionView.Behaviors>
                        <mct:EventToCommandBehavior EventName="SelectionChanged" Command="{Binding Source={x:Reference chatPage}, Path=CollapseModelDropdownCommand}"/>
                    </CollectionView.Behaviors>
                </CollectionView>
            </Border>

            <VerticalStackLayout Margin="16, 16, 16, 8" Spacing="12" IsVisible="{Binding ModelListViewModel.UserModels.Count, Converter={StaticResource EqualToZeroConverter}}">
                <Label TextColor="{StaticResource OutlineVariantDark}" HorizontalTextAlignment="Center" VerticalOptions="Center" Text="You don't have any model installed"/>
                <views:LinkView
                    Text="Go to Models tab"
                    Command="{Binding NavigateToModelPageCommand}"
                    Icon="{x:Static icons:MaterialRegular.Download}"/>
                <!--TextColor="{StaticResource SecondaryDark}"-->
            </VerticalStackLayout>
        </Grid>

        <Grid RowDefinitions="auto, *">
            <Grid
                ColumnSpacing="16" 
                RowDefinitions="*, *, auto"
                ColumnDefinitions="auto, *, auto">

                <Button 
                    Style="{StaticResource SidebarToggleButtonStyle}"
                    Text="{x:Static icons:MaterialRegular.Message}"
                    Clicked="ChatsButtonClicked"
                    HorizontalOptions="Start"/>

                <Border 
                    x:Name="modelDropdownBorder"
                    StrokeThickness="0"
                    StrokeShape="RoundRectangle 4"
                    Grid.Column="1"
                    Margin="0, 8"
                    ZIndex="1"
                    InputTransparent="False"
                    MaximumWidthRequest="{x:Static local:AppConstants.ChatMessageMaximumWidth}"
                    Stroke="Transparent">
                    <uranium:StatefulContentView
                        
                        Style="{StaticResource ModelDropdownButtonStyle}"
                        InputTransparent="False"
                        TappedCommand="{Binding Source={x:Reference chatPage}, Path=ToggleModelDropdownIsExpandedCommand}">
                        <uranium:StatefulContentView.Triggers>
                            <DataTrigger TargetType="uranium:StatefulContentView" Binding="{Binding LmKitService.ModelLoadingState}" Value="{x:Static services:LmKitModelLoadingState.Loading}">
                                <Setter Property="InputTransparent" Value="True" />
                            </DataTrigger>

                            <DataTrigger TargetType="uranium:StatefulContentView" Binding="{Binding LmKitService.ModelLoadingState}" Value="{x:Static services:LmKitModelLoadingState.Loading}">
                                <Setter Property="InputTransparent" Value="True" />
                            </DataTrigger>

                            <DataTrigger TargetType="uranium:StatefulContentView" Binding="{Binding Source={x:RelativeSource AncestorType={x:Type vm:AppShellViewModel}}, Path=AppIsInitialized}" Value="False">
                                <Setter Property="InputTransparent" Value="True" />
                            </DataTrigger>
                        </uranium:StatefulContentView.Triggers>


                        <!--Model dropdown button-->
                        <Grid RowDefinitions="*, auto">
                            <Grid Padding="12, 0" ColumnSpacing="8" ColumnDefinitions="24, *, 24">
                                <Button 
                                    IsVisible="{Binding LmKitService.ModelLoadingState, Converter={mct:IsEqualConverter}, ConverterParameter={x:Static services:LmKitModelLoadingState.Loaded}}"
                                    HeightRequest="24"
                                    WidthRequest="24"
                                    HorizontalOptions="Center"
                                    VerticalOptions="Center"
                                    BackgroundColor="{StaticResource OnSurfaceDark}"
                                    CornerRadius="18"
                                    Padding="0"
                                    Command="{Binding EjectModelCommand}"
                                    ToolTipProperties.Text="Eject model"
                                    TextColor="{StaticResource SurfaceDark}" 
                                    Text="{x:Static icons:MaterialRegular.Eject}" FontFamily="MaterialSharp">
                                </Button>

                                <Label 
                                    Grid.Column="1"
                                    VerticalOptions="Center"
                                    HorizontalTextAlignment="Center"
                                    TextColor="{StaticResource White}">
                                    <Label.Triggers>
                                        <!--<DataTrigger TargetType="Label">
                                            <DataTrigger.Binding>
                                                <MultiBinding Converter="{StaticResource AllTrueConverter}">
                                                    <Binding  Source="{RelativeSource AncestorType={x:Type vm:ChatPageViewModel}}" Path="LmKitService.ModelLoadingState" Converter="{mct:IsEqualConverter}" ConverterParameter="{x:Static vm:ModelLoadingState.Loading}"/>
                                                    <Binding  Source="{RelativeSource AncestorType={x:Type vm:ChatPageViewModel}}" Path="ModelLoadingIsFinishingUp" Converter="{mct:InvertedBoolConverter}"/>
                                                </MultiBinding>
                                            </DataTrigger.Binding>
                                            
                                            <Setter Property="Text" Value="Loading model..."/>
                                            <Setter Property="TextColor" Value="{StaticResource OutlineDark}"/>
                                        </DataTrigger>

                                        <DataTrigger TargetType="Label">
                                            <DataTrigger.Binding>
                                                <MultiBinding Converter="{StaticResource AllTrueConverter}">
                                                    <Binding  Source="{RelativeSource AncestorType={x:Type vm:ChatPageViewModel}}" Path="LmKitService.ModelLoadingState" Converter="{mct:IsEqualConverter}" ConverterParameter="{x:Static vm:ModelLoadingState.Loading}"/>
                                                    <Binding  Source="{RelativeSource AncestorType={x:Type vm:ChatPageViewModel}}" Path="ModelLoadingIsFinishingUp"/>
                                                </MultiBinding>
                                            </DataTrigger.Binding>
                                            <Setter Property="Text" Value="Finishing up..."/>
                                            <Setter Property="TextColor" Value="{StaticResource OutlineDark}"/>
                                        </DataTrigger>-->

                                        <DataTrigger TargetType="Label" Binding="{Binding LmKitService.ModelLoadingState}" Value="{x:Static services:LmKitModelLoadingState.Loading}">
                                            <Setter Property="TextColor" Value="{StaticResource OutlineDark}"/>
                                            <Setter Property="Text" Value="{Binding Source={x:Reference chatPage}, Path=LoadingText}"/>
                                        </DataTrigger>

                                        <DataTrigger TargetType="Label" Binding="{Binding LmKitService.ModelLoadingState}" Value="{x:Static services:LmKitModelLoadingState.Loaded}">
                                            <Setter Property="Text" Value="{Binding SelectedModel.Name}"/>
                                        </DataTrigger>

                                        <DataTrigger TargetType="Label" Binding="{Binding LmKitService.ModelLoadingState}" Value="{x:Static services:LmKitModelLoadingState.Unloaded}">
                                            <Setter Property="Text" Value="Select a model to load"/>
                                        </DataTrigger>
                                        
                                        <DataTrigger TargetType="Label" Binding="{Binding Source={x:RelativeSource AncestorType={x:Type vm:AppShellViewModel}}, Path=AppIsInitialized}" Value="False">
                                            <Setter Property="TextColor" Value="{StaticResource OutlineDark}"/>
                                            <Setter Property="Text" Value="Chat Playground is initializing..."/>
                                        </DataTrigger>
                                    </Label.Triggers>
                                </Label>

                                <Label 
                                    IsVisible="{Binding LmKitService.ModelLoadingState, Converter={mct:IsNotEqualConverter}, ConverterParameter={x:Static services:LmKitModelLoadingState.Loading}}"
                                    BackgroundColor="Transparent"
                                    HorizontalOptions="End"
                                    Grid.Column="2"
                                    VerticalOptions="Center"
                                    FontFamily="MaterialRegular"
                                    TextColor="{StaticResource OnSurfaceDark}"
                                    Text="{x:Static icons:MaterialRegular.Keyboard_arrow_down}">
                                    <Label.Triggers>
                                        <DataTrigger TargetType="Label" Binding="{Binding Source={x:RelativeSource AncestorType={x:Type vm:AppShellViewModel}}, Path=AppIsInitialized}" Value="False">
                                            <Setter Property="IsVisible" Value="False"/>
                                        </DataTrigger>
                                    </Label.Triggers>
                                </Label>
                            </Grid>

                            <ProgressBar 
                                Grid.ColumnSpan="3"
                                IsVisible="{Binding LmKitService.ModelLoadingState, Converter={mct:IsEqualConverter}, ConverterParameter={x:Static services:LmKitModelLoadingState.Loading}}"
                                VerticalOptions="End"
                                Grid.Row="1"
                                ProgressColor="{StaticResource OutlineDark}" 
                                Progress="{Binding LoadingProgress}"/>

                        </Grid>
                    </uranium:StatefulContentView>
                </Border>

                <Button 
                    Style="{StaticResource SidebarToggleButtonStyle}"
                    Text="{x:Static icons:MaterialRegular.Settings}"
                    Clicked="SettingsButtonClicked"
                    HorizontalOptions="End"
                    Grid.Column="2"/>

                <BoxView StyleClass="Separator" HeightRequest="1.5" Grid.Row="2" Grid.ColumnSpan="3"/>
            </Grid>

            <Grid Grid.Row="1" ColumnDefinitions="auto, *, auto">
                <views:ChatConversationsView
                    WidthRequest="300"
                    Margin="0"
                    IsVisible="{Binding Source={x:Reference chatPage}, Path=ChatsSidebarIsToggled}"/>

                <views:ChatView 
                    x:Name="chatView"
                    BindingContext="{Binding CurrentConversation}" 
                    Grid.Column="1" 
                    Margin="0"/>

                <views:ChatSettingsView
                    WidthRequest="300"
                    Grid.Column="2"
                    BindingContext="{Binding SettingsViewModel}"
                    IsVisible="{Binding Source={x:Reference chatPage}, Path=SettingsSidebarIsToggled}"/>
            </Grid>
        </Grid>
    </Grid>
</ContentPage>