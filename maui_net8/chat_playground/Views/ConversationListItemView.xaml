<?xml version="1.0" encoding="utf-8" ?>
<ContentView xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:mct="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:views="clr-namespace:ChatPlayground.Views"
             xmlns:models="clr-namespace:ChatPlayground.Models"
             xmlns:controls="clr-namespace:ChatPlayground.Controls"
             xmlns:vm="clr-namespace:ChatPlayground.ViewModels"
             xmlns:uranium="http://schemas.enisn-projects.io/dotnet/maui/uraniumui"
             xmlns:icons="clr-namespace:UraniumUI.Icons.MaterialIcons;assembly=UraniumUI.Icons.MaterialIcons"
             xmlns:plainer="clr-namespace:Plainer.Maui.Controls;assembly=Plainer.Maui"
             x:DataType="vm:ConversationViewModel"
             ToolTipProperties.Text="{Binding Title}"
             x:Class="ChatPlayground.Views.ConversationListItemView"
             x:Name="conversationListItemView"
             >
    <ContentView.Resources>
        <Style TargetType="Button" x:Key="ActionButton">
            <Setter Property="Padding" Value="0"/>
            <Setter Property="BackgroundColor" Value="Transparent"/>
            <Setter Property="FontFamily" Value="MaterialRegular"/>
            <Setter Property="BorderWidth" Value="0"/>
            <Setter Property="TextColor" Value="{StaticResource OutlineDark}"/>
        </Style>
        
        <Style BasedOn="{StaticResource ActionButton}" Class="DeletingAction" TargetType="Button">
            <Setter Property="VisualStateManager.VisualStateGroups">
                <VisualStateGroupList>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal" />
                        <VisualState x:Name="Pressed">
                            <VisualState.Setters>
                                <Setter Property="TextColor" Value="{StaticResource ErrorDark}"/>
                                <Setter Property="Opacity" Value="0.7"/>
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState x:Name="PointerOver">
                            <VisualState.Setters>
                                <Setter Property="TextColor" Value="{StaticResource ErrorDark}"/>
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateGroupList>
            </Setter>
        </Style>

        <Style BasedOn="{StaticResource ActionButton}" Class="RegularAction" TargetType="Button">
            <Setter Property="VisualStateManager.VisualStateGroups">
                <VisualStateGroupList>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal" />
                        <VisualState x:Name="Pressed">
                            <VisualState.Setters>
                                <Setter Property="TextColor" Value="{StaticResource White}"/>
                                <Setter Property="Opacity" Value="0.7"/>
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState x:Name="PointerOver">
                            <VisualState.Setters>
                                <Setter Property="TextColor" Value="{StaticResource White}"/>
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateGroupList>
            </Setter>
        </Style>
        
        <Style x:Key="ConversationItemContainerStyle" TargetType="uranium:StatefulContentView">
            <Setter Property="VisualStateManager.VisualStateGroups">
                <VisualStateGroupList>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState Name="PointerOver">
                            <VisualState.Setters>
                                <Setter Property="Background" Value="{StaticResource SurfaceContainerDark}" />
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState x:Name="Normal">
                            <VisualState.Setters>
                                <Setter Property="Background" Value="Transparent"/>
                            </VisualState.Setters>
                        </VisualState>
                        <!--<VisualState x:Name="Selected">
                            <VisualState.Setters>
                                <Setter Property="Background" Value="{StaticResource Gray600}" />
                            </VisualState.Setters>
                        </VisualState>-->
                    </VisualStateGroup>
                </VisualStateGroupList>
            </Setter>
        </Style>
    </ContentView.Resources>

    <uranium:StatefulContentView 
        CascadeInputTransparent="False"
        Tapped="OnConversationListItemViewTapped"
        Style="{StaticResource ConversationItemContainerStyle}">
        <Grid RowDefinitions="*, auto" ColumnDefinitions="*, auto, auto">
            <!-- Workaround data triggers bug: add another Grid to the background and show it upon selection !-->
            <Grid Grid.ColumnSpan="3" ZIndex="1" Opacity="1" BackgroundColor="{StaticResource SurfaceContainerHighDark}">
                <Grid.Triggers>
                    <DataTrigger TargetType="Grid" Binding="{Binding IsSelected}" Value="True">
                        <Setter Property="IsVisible" Value="True"/>
                    </DataTrigger>
                    <DataTrigger TargetType="Grid" Binding="{Binding IsSelected}" Value="False">
                        <Setter Property="IsVisible" Value="False"/>
                    </DataTrigger>
                </Grid.Triggers>
            </Grid>

            <Label 
                Margin="10, 6, 0, 6"
                MaxLines="1"
                LineBreakMode="TailTruncation"
                ZIndex="2"
                Style="{StaticResource Subtitle}"
                Text="{Binding Title}"
                VerticalTextAlignment="Center"
                IsVisible="{Binding EditingTitle, Converter={mct:InvertedBoolConverter}}">
            </Label>

            <controls:CustomEntry
                IsVisible="{Binding EditingTitle}"
                x:Name="conversationTitle"
                InputTransparent="True"
                ZIndex="2"
                ClearButtonVisibility="Never"
                Focused="ConversationTitleFocused"
                VerticalTextAlignment="Center"
                PlaceholderColor="Transparent"
                IsReadOnly="True"
                Unfocused="ConversationTitleUnfocused">
                <controls:CustomEntry.Triggers>
                    <DataTrigger TargetType="controls:CustomEntry" Binding="{Binding IsSelected}" Value="True">
                        <Setter Property="TextColor" Value="{StaticResource OnSurfaceDark}"/>
                    </DataTrigger>
                    <DataTrigger TargetType="controls:CustomEntry" Binding="{Binding IsSelected}" Value="False">
                        <Setter Property="TextColor" Value="{StaticResource OnSurfaceDark}"/>
                    </DataTrigger>
                    <DataTrigger TargetType="controls:CustomEntry" Binding="{Binding EditingTitle}" Value="True">
                        <Setter Property="InputTransparent" Value="False"/>
                        <Setter Property="IsReadOnly" Value="False"/>
                    </DataTrigger>

                </controls:CustomEntry.Triggers>
            </controls:CustomEntry>

            <!--<Label
            ZIndex="2" 
            Margin="4, 8" 
            VerticalOptions="Center" 
            Text="{Binding Title}">
            <Label.Triggers>
                <DataTrigger TargetType="Label" Binding="{Binding IsSelected}" Value="True">
                    <Setter Property="TextColor" Value="{StaticResource OnSurfaceDark}"/>
                </DataTrigger>
                <DataTrigger TargetType="Label" Binding="{Binding IsSelected}" Value="False">
                    <Setter Property="TextColor" Value="{StaticResource OnSurfaceDark}"/>
                </DataTrigger>
            </Label.Triggers>
        </Label>-->

            <Button 
                Margin="6, 0"
                VerticalOptions="Center"
                StyleClass="RegularAction"
                ZIndex="2"
                Grid.Column="1" 
                Text="{x:Static icons:MaterialRegular.Edit}"
                Clicked="EditConversationTitleButtonClicked"
                Command="{Binding Source={RelativeSource AncestorType={x:Type vm:ChatPageViewModel}}, Path=EditConversationTitleCommand}" 
                CommandParameter="{Binding Source={RelativeSource Self}, Path=BindingContext}"/>

            <Button
                Margin="6, 0, 10, 0"
                VerticalOptions="Center"
                StyleClass="DeletingAction"
                ZIndex="2"
                Grid.Column="2"
                Clicked="DeleteButtonClicked"
                Text="{x:Static icons:MaterialRegular.Delete}"
                Command="{Binding Source={RelativeSource AncestorType={x:Type vm:ChatPageViewModel}}, Path=DeleteConversationCommand}" 
                CommandParameter="{Binding Source={RelativeSource Self}, Path=BindingContext}"/>

            <BoxView HeightRequest="0.5" StyleClass="Separator"  Grid.ColumnSpan="3" Grid.Row="1"/>
        </Grid>
    </uranium:StatefulContentView>
</ContentView>
